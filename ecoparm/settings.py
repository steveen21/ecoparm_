"""
Django settings for ecoparm project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import cloudinary
import cloudinary.uploader
from cloudinary.utils import cloudinary_url
from pathlib import Path
import os

# Cloudinary config
cloudinary.config( 
    cloud_name = "dnjovg2er", 
    api_key = "371841788621735", 
    api_secret = "WUC5TDVESMjniW7AZdyiCFZjDh4",  # cámbialo aquí
    secure=True
)

CLOUDINARY_STORAGE = {
    'CLOUD_NAME': 'dnjovg2er',
    'API_KEY': '371841788621735',
    'API_SECRET': 'WUC5TDVESMjniW7AZdyiCFZjDh4'
}

DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$=1@9jnac&sema%w(o=si838!nv@zgwsc%%rg&j2u1fle4+57h'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'aplicacion',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'cloudinary',
    'cloudinary_storage',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ecoparm.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ecoparm.wsgi.application'
AUTH_USER_MODEL = 'aplicacion.CustomUser'


# Redirecciones de login/logout
LOGIN_URL = '/login'
LOGIN_REDIRECT_URL = 'admin_inicio'
LOGOUT_REDIRECT_URL = 'index'

# Configuración de sesión
SESSION_COOKIE_AGE = 3600  # 1 hora en segundos
SESSION_SAVE_EVERY_REQUEST = True


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'prueba_eco',
        'USER': 'postgres',
        'PASSWORD': 'admin',  # Si no tienes contraseña en XAMPP, déjalo vacío
        'HOST': 'localhost',
        'PORT': '5432',  # Puerto correcto de Postg
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / 'aplicacion' / 'static',
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'ecoparmsena@gmail.com'
EMAIL_HOST_PASSWORD = 'boff ftxd snvm aupc'
DEFAULT_FROM_EMAIL = 'ECOPARM <no-responder@ecoparm.com>'

# Backup Configuration
BACKUP_ROOT = os.path.join(BASE_DIR, 'backups')
BACKUP_DIRS = {
    'MEDIA': MEDIA_ROOT,
    'CONFIG': os.path.join(BASE_DIR, 'ecoparm'),
    'TEMP': os.path.join(BACKUP_ROOT, 'temp')
}

# Asegúrate que los directorios existan
for dir_path in BACKUP_DIRS.values():
    os.makedirs(dir_path, exist_ok=True)

# Configuración de backups
BACKUP_CONFIG = {
    'MAX_BACKUPS': 10,  # Número máximo de backups a mantener
    'BACKUP_FILENAME_FORMAT': 'backup_%Y%m%d_%H%M%S',  # Formato del nombre del archivo
    'COMPRESS_TYPE': 'zip',  # Tipo de compresión ('zip' o 'tar')
    'BACKUP_SCHEDULE': {
        'DAILY': '03:00',  # Hora para backups diarios (formato 24h)
        'WEEKLY': 1,  # Día de la semana para backups semanales (0=Lunes, 6=Domingo)
        'MONTHLY': 1,  # Día del mes para backups mensuales
    }
}

# Database backup configuration
DB_BACKUP_CONFIG = {
    'INCLUDE_MEDIA': True,
    'INCLUDE_CONFIG_FILES': True,
    'EXCLUDE_TABLES': [],  # Tablas a excluir del backup
    'BACKUP_COUNT': 30,  # Días a mantener los backups
}
